package cn.edu.hbpu.trip.pojo;

import java.util.ArrayList;
import java.util.List;

public class ShoppinginfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public ShoppinginfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andShoppingidIsNull() {
            addCriterion("shoppingid is null");
            return (Criteria) this;
        }

        public Criteria andShoppingidIsNotNull() {
            addCriterion("shoppingid is not null");
            return (Criteria) this;
        }

        public Criteria andShoppingidEqualTo(Integer value) {
            addCriterion("shoppingid =", value, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidNotEqualTo(Integer value) {
            addCriterion("shoppingid <>", value, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidGreaterThan(Integer value) {
            addCriterion("shoppingid >", value, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidGreaterThanOrEqualTo(Integer value) {
            addCriterion("shoppingid >=", value, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidLessThan(Integer value) {
            addCriterion("shoppingid <", value, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidLessThanOrEqualTo(Integer value) {
            addCriterion("shoppingid <=", value, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidIn(List<Integer> values) {
            addCriterion("shoppingid in", values, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidNotIn(List<Integer> values) {
            addCriterion("shoppingid not in", values, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidBetween(Integer value1, Integer value2) {
            addCriterion("shoppingid between", value1, value2, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andShoppingidNotBetween(Integer value1, Integer value2) {
            addCriterion("shoppingid not between", value1, value2, "shoppingid");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andGoodsidIsNull() {
            addCriterion("goodsid is null");
            return (Criteria) this;
        }

        public Criteria andGoodsidIsNotNull() {
            addCriterion("goodsid is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsidEqualTo(Integer value) {
            addCriterion("goodsid =", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidNotEqualTo(Integer value) {
            addCriterion("goodsid <>", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidGreaterThan(Integer value) {
            addCriterion("goodsid >", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidGreaterThanOrEqualTo(Integer value) {
            addCriterion("goodsid >=", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidLessThan(Integer value) {
            addCriterion("goodsid <", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidLessThanOrEqualTo(Integer value) {
            addCriterion("goodsid <=", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidIn(List<Integer> values) {
            addCriterion("goodsid in", values, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidNotIn(List<Integer> values) {
            addCriterion("goodsid not in", values, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidBetween(Integer value1, Integer value2) {
            addCriterion("goodsid between", value1, value2, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidNotBetween(Integer value1, Integer value2) {
            addCriterion("goodsid not between", value1, value2, "goodsid");
            return (Criteria) this;
        }

        public Criteria andPersonnumIsNull() {
            addCriterion("personnum is null");
            return (Criteria) this;
        }

        public Criteria andPersonnumIsNotNull() {
            addCriterion("personnum is not null");
            return (Criteria) this;
        }

        public Criteria andPersonnumEqualTo(Integer value) {
            addCriterion("personnum =", value, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumNotEqualTo(Integer value) {
            addCriterion("personnum <>", value, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumGreaterThan(Integer value) {
            addCriterion("personnum >", value, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("personnum >=", value, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumLessThan(Integer value) {
            addCriterion("personnum <", value, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumLessThanOrEqualTo(Integer value) {
            addCriterion("personnum <=", value, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumIn(List<Integer> values) {
            addCriterion("personnum in", values, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumNotIn(List<Integer> values) {
            addCriterion("personnum not in", values, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumBetween(Integer value1, Integer value2) {
            addCriterion("personnum between", value1, value2, "personnum");
            return (Criteria) this;
        }

        public Criteria andPersonnumNotBetween(Integer value1, Integer value2) {
            addCriterion("personnum not between", value1, value2, "personnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumIsNull() {
            addCriterion("roomnum is null");
            return (Criteria) this;
        }

        public Criteria andRoomnumIsNotNull() {
            addCriterion("roomnum is not null");
            return (Criteria) this;
        }

        public Criteria andRoomnumEqualTo(Integer value) {
            addCriterion("roomnum =", value, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumNotEqualTo(Integer value) {
            addCriterion("roomnum <>", value, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumGreaterThan(Integer value) {
            addCriterion("roomnum >", value, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("roomnum >=", value, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumLessThan(Integer value) {
            addCriterion("roomnum <", value, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumLessThanOrEqualTo(Integer value) {
            addCriterion("roomnum <=", value, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumIn(List<Integer> values) {
            addCriterion("roomnum in", values, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumNotIn(List<Integer> values) {
            addCriterion("roomnum not in", values, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumBetween(Integer value1, Integer value2) {
            addCriterion("roomnum between", value1, value2, "roomnum");
            return (Criteria) this;
        }

        public Criteria andRoomnumNotBetween(Integer value1, Integer value2) {
            addCriterion("roomnum not between", value1, value2, "roomnum");
            return (Criteria) this;
        }

        public Criteria andStartaddIsNull() {
            addCriterion("startadd is null");
            return (Criteria) this;
        }

        public Criteria andStartaddIsNotNull() {
            addCriterion("startadd is not null");
            return (Criteria) this;
        }

        public Criteria andStartaddEqualTo(String value) {
            addCriterion("startadd =", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddNotEqualTo(String value) {
            addCriterion("startadd <>", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddGreaterThan(String value) {
            addCriterion("startadd >", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddGreaterThanOrEqualTo(String value) {
            addCriterion("startadd >=", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddLessThan(String value) {
            addCriterion("startadd <", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddLessThanOrEqualTo(String value) {
            addCriterion("startadd <=", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddLike(String value) {
            addCriterion("startadd like", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddNotLike(String value) {
            addCriterion("startadd not like", value, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddIn(List<String> values) {
            addCriterion("startadd in", values, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddNotIn(List<String> values) {
            addCriterion("startadd not in", values, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddBetween(String value1, String value2) {
            addCriterion("startadd between", value1, value2, "startadd");
            return (Criteria) this;
        }

        public Criteria andStartaddNotBetween(String value1, String value2) {
            addCriterion("startadd not between", value1, value2, "startadd");
            return (Criteria) this;
        }

        public Criteria andMaintelIsNull() {
            addCriterion("maintel is null");
            return (Criteria) this;
        }

        public Criteria andMaintelIsNotNull() {
            addCriterion("maintel is not null");
            return (Criteria) this;
        }

        public Criteria andMaintelEqualTo(String value) {
            addCriterion("maintel =", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelNotEqualTo(String value) {
            addCriterion("maintel <>", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelGreaterThan(String value) {
            addCriterion("maintel >", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelGreaterThanOrEqualTo(String value) {
            addCriterion("maintel >=", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelLessThan(String value) {
            addCriterion("maintel <", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelLessThanOrEqualTo(String value) {
            addCriterion("maintel <=", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelLike(String value) {
            addCriterion("maintel like", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelNotLike(String value) {
            addCriterion("maintel not like", value, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelIn(List<String> values) {
            addCriterion("maintel in", values, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelNotIn(List<String> values) {
            addCriterion("maintel not in", values, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelBetween(String value1, String value2) {
            addCriterion("maintel between", value1, value2, "maintel");
            return (Criteria) this;
        }

        public Criteria andMaintelNotBetween(String value1, String value2) {
            addCriterion("maintel not between", value1, value2, "maintel");
            return (Criteria) this;
        }

        public Criteria andBxnumIsNull() {
            addCriterion("bxnum is null");
            return (Criteria) this;
        }

        public Criteria andBxnumIsNotNull() {
            addCriterion("bxnum is not null");
            return (Criteria) this;
        }

        public Criteria andBxnumEqualTo(Integer value) {
            addCriterion("bxnum =", value, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumNotEqualTo(Integer value) {
            addCriterion("bxnum <>", value, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumGreaterThan(Integer value) {
            addCriterion("bxnum >", value, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("bxnum >=", value, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumLessThan(Integer value) {
            addCriterion("bxnum <", value, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumLessThanOrEqualTo(Integer value) {
            addCriterion("bxnum <=", value, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumIn(List<Integer> values) {
            addCriterion("bxnum in", values, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumNotIn(List<Integer> values) {
            addCriterion("bxnum not in", values, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumBetween(Integer value1, Integer value2) {
            addCriterion("bxnum between", value1, value2, "bxnum");
            return (Criteria) this;
        }

        public Criteria andBxnumNotBetween(Integer value1, Integer value2) {
            addCriterion("bxnum not between", value1, value2, "bxnum");
            return (Criteria) this;
        }

        public Criteria andJdidIsNull() {
            addCriterion("jdid is null");
            return (Criteria) this;
        }

        public Criteria andJdidIsNotNull() {
            addCriterion("jdid is not null");
            return (Criteria) this;
        }

        public Criteria andJdidEqualTo(Integer value) {
            addCriterion("jdid =", value, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidNotEqualTo(Integer value) {
            addCriterion("jdid <>", value, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidGreaterThan(Integer value) {
            addCriterion("jdid >", value, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidGreaterThanOrEqualTo(Integer value) {
            addCriterion("jdid >=", value, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidLessThan(Integer value) {
            addCriterion("jdid <", value, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidLessThanOrEqualTo(Integer value) {
            addCriterion("jdid <=", value, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidIn(List<Integer> values) {
            addCriterion("jdid in", values, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidNotIn(List<Integer> values) {
            addCriterion("jdid not in", values, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidBetween(Integer value1, Integer value2) {
            addCriterion("jdid between", value1, value2, "jdid");
            return (Criteria) this;
        }

        public Criteria andJdidNotBetween(Integer value1, Integer value2) {
            addCriterion("jdid not between", value1, value2, "jdid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shoppinginfo
     *
     * @mbggenerated do_not_delete_during_merge Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shoppinginfo
     *
     * @mbggenerated Sun Dec 19 11:02:10 GMT+08:00 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}